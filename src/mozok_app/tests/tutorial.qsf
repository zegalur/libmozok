# ...

version 1 0
script script_name_here

# ======================== STRUCTURE SECTION ================================ #

# Defines a list of worlds.
worlds:
    tut # Tutorial world.

# Defines a list of projects that need to be loaded.
projects:
    [tut] tutorial_utils.quest
    [tut] tutorial_controls.quest
    [tut] tutorial_fighting.quest
    [tut] tutorial_key.quest
    [tut] tutorial_puzzle.quest
    [tut] tutorial_main.quest

# The list of actions to properly initialize the game.
init:
    [tut] InitTutorials()


# ======================== DEBUGGING SECTION ================================ #

# Activated after all projects were loaded and init actions were applied. 
onInit:
ACT ON_INIT:
    print Hello, world!

# Print a message when the `FinishAllTutorials` is activated.
onNewMainQuest [tut] FinishAllTutorials:
ACT TUTORIAL_STARTED:
    print Tutorial quest started, enjoy!

# Split and block the exit, when `_GetHeart` is activated. 
onNewSubQuest [tut] PuzzleTutorial_GetHeart _ _:
SPLIT BLOCK_EXIT:
    # In this branch we expect this quest to fail.
    expect UNREACHABLE [tut] PuzzleTutorial_GetHeart
    # As a consequence, we expect a goal change in the parent quest.
    expect GOAL_CHANGE [tut] PuzzleTutorial _ 1
    # Block the exit with the stone that can't be moved.
    apply [tut] PTut_BlockExit()
SPLIT DO_NOTHING:
    # second possible split
    print Second split test

# Pause the simulation when search limit is reached.
onSearchLimitReached [tut] _:
ALWAYS SEARCH_LIMIT: 
    exit ERROR: Search limit reached!

# Triggered when this action preconditions hold during the simulation.
onPre [tut] KeyTutorial(fightingTutorial, keyTutorial):
ACT ON_TST_ACTION:
    print KeyTutorial preconditions holds.

# Triggered when action was applied during the simulation.
onAction [tut] ApplyTutorialAction(pickUpKeyAction):
ACT ON_TST_ACTION:
    print The key was picked up!
