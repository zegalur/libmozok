# save_family.quest
version 1 0
project save_family

type Place
    type Protectable : Place

type Locatable
    type Item : Locatable
    type Character : Locatable
        type Player : Character

object john_ : Player
object anne_ : Character

object home_ : Protectable
object forest_ : Place


# A locatable object {1} is at the place {2}.
rel At(Locatable, Place)

# A character is healthy.
rel Healthy(Character)

# A character is infected.
rel Infected(Character)

# A safe place.
rel Safe(Place)

# A protectable place is protected.
rel Protected(Protectable)

# A path exists from place {1} to place {2}.
rel Path(Place, Place)

rel Escaped(Character)

rlist Path2:
    a : Place
    b : Place
    Path(a, b)
    Path(b, a)


action Init:
    pre # none
    rem # none
    add Path2(forest_, home_)
        Safe(home_)
        At(john_, forest_)
        At(anne_, forest_)
        Healthy(john_)
        Infected(anne_)


action TakeInfected:
    player : Player
    character : Character
    from : Place
    to : Place
    pre Healthy(player)
        Infected(character)
        At(player, from)
        At(character, from)
        Path(from, to)
    rem At(player, from)
        At(character, from)
    add At(player, to)
        At(character, to)


action SaveInfected:
    player : Player
    character : Character
    safe_place : Place
    pre Healthy(player)
        Infected(character)
        At(player, safe_place)
        At(character, safe_place)
        Safe(safe_place)
    rem Infected(character)
    add Healthy(character)


action Protect:
    player : Player
    place : Protectable
    pre Healthy(player)
        At(player, place)
    rem # none
    add Protected(place)


main_quest SaveFamily:
    preconditions:
        # none
    goal:
        Healthy(anne_)
        Protected(home_)
    goal:
        Escaped(john_)
    actions:
        TakeInfected
        SaveInfected
        Protect
    objects:
        john_
        anne_
        forest_
        home_
    subquests:
        # none
